(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{599:function(t,a,r){"use strict";r.r(a);var s=r(12),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"函数式编程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#函数式编程"}},[t._v("#")]),t._v(" 函数式编程")]),t._v(" "),r("ul",[r("li",[t._v("Vue3，React越来越拥抱函数式编程")]),t._v(" "),r("li",[t._v("函数式编程可以抛弃this")]),t._v(" "),r("li",[t._v("打包可以更方便的利用tree shaking过滤无用代码")]),t._v(" "),r("li",[t._v("有很多库可以帮助我们进行函数式开发：lodash，underscore，ramda")])]),t._v(" "),r("h2",{attrs:{id:"什么式函数式编程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么式函数式编程"}},[t._v("#")]),t._v(" 什么式函数式编程")]),t._v(" "),r("p",[t._v("Functional Programming, FP式编程范式之一。\n编程范式还有面向过程编程/面向对象编程")]),t._v(" "),r("h2",{attrs:{id:"面向对象编程的思维方式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#面向对象编程的思维方式"}},[t._v("#")]),t._v(" 面向对象编程的思维方式")]),t._v(" "),r("p",[t._v("把事物与其之间的联系逻辑抽离成成类和对象，通过封装/继承/多态来演示这些规则")]),t._v(" "),r("h2",{attrs:{id:"函数式编程的思维方式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#函数式编程的思维方式"}},[t._v("#")]),t._v(" 函数式编程的思维方式")]),t._v(" "),r("p",[t._v("把事物和事物之间的联系抽象，对运算过程进行抽象\nx ->f(联系，映射)->y  ,y = f(x)\n相同的输入，一定要有相同的输出")])])}),[],!1,null,null,null);a.default=e.exports}}]);